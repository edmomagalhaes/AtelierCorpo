@using AtelierCorpo.Models
@model AtelierCorpo.Models.Anamnesis

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Anamnesis</h4>
        <hr />
        @Html.ValidationSummary(true)
        @{ int i = 0; }
        @Html.Hidden("user", 2)

        @foreach (Question item in ViewBag.Questions)
        {
            <div class="form-group">
                @Html.Label(item.Title, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Hidden("QuestionId", item.ID)
                    @Html.EditorFor(model => model.Answer, null, string.Format("[{0}].Answer", i))
                    @Html.ValidationMessageFor(model => model.Answer)
                    @Html.EditorFor(model => model.Complement, null, string.Format("[{0}].Complement", i))
                    @Html.ValidationMessageFor(model => model.Complement)
                    @{ i++; }>
                </div>
            </div>
        }

        @*<div class="form-group">
            @Html.LabelFor(model => model.Answer, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Answer)
                @Html.ValidationMessageFor(model => model.Answer)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Complement, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Complement)
                @Html.ValidationMessageFor(model => model.Complement)
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
